{"ast":null,"code":"import { TestBed } from '@angular/core/testing';\nimport { HttpTestingController } from '@angular/common/http/testing';\nimport { AuthService } from './auth.service';\ndescribe('AuthService', () => {\n  let service;\n  let testingControler;\n  beforeEach(() => {\n    TestBed.configureTestingModule({});\n    service = TestBed.inject(AuthService);\n    testingControler = TestBed.inject(HttpTestingController);\n  });\n  it('should be created', () => {\n    expect(service).toBeTruthy();\n  });\n  it('Logs in user', () => {\n    const mockUser = {\n      first_name: \"Daniel\",\n      last_name: \"Muriithi\",\n      email: \"muriithikiamad1@gmail.com\",\n      password: \"12345678\"\n    };\n    service.loginUser(mockUser).subscribe(res => {\n      expect(res.message).toEqual(\"Logged In successfully\");\n    });\n  });\n});","map":{"version":3,"names":["TestBed","HttpTestingController","AuthService","describe","service","testingControler","beforeEach","configureTestingModule","inject","it","expect","toBeTruthy","mockUser","first_name","last_name","email","password","loginUser","subscribe","res","message","toEqual"],"sources":["E:\\QAQE\\Recent Projects\\Project Management System ng\\project-management-system\\src\\Services\\auth.service.spec.ts"],"sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport {HttpClientTestingModule, HttpTestingController} from '@angular/common/http/testing'\r\n\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\ndescribe('AuthService', () => {\r\n  let service: AuthService;\r\n  \r\n  let testingControler:HttpTestingController\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({});\r\n    service = TestBed.inject(AuthService);\r\n    testingControler = TestBed.inject(HttpTestingController)\r\n\r\n  });\r\n\r\n  it('should be created', () => {\r\n    expect(service).toBeTruthy();\r\n  });\r\n\r\n  it('Logs in user',()=>{\r\n    const mockUser = {\r\n      first_name:\"Daniel\",\r\n      last_name: \"Muriithi\",\r\n      email:\"muriithikiamad1@gmail.com\",\r\n      password:\"12345678\"\r\n    }\r\n\r\n    service.loginUser(mockUser).subscribe(res=>{\r\n      expect(res.message).toEqual(\"Logged In successfully\")\r\n  })\r\n});\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,uBAAuB;AAC/C,SAAiCC,qBAAqB,QAAO,8BAA8B;AAG3F,SAASC,WAAW,QAAQ,gBAAgB;AAE5CC,QAAQ,CAAC,aAAa,EAAE,MAAK;EAC3B,IAAIC,OAAoB;EAExB,IAAIC,gBAAsC;EAE1CC,UAAU,CAAC,MAAK;IACdN,OAAO,CAACO,sBAAsB,CAAC,EAAE,CAAC;IAClCH,OAAO,GAAGJ,OAAO,CAACQ,MAAM,CAACN,WAAW,CAAC;IACrCG,gBAAgB,GAAGL,OAAO,CAACQ,MAAM,CAACP,qBAAqB,CAAC;EAE1D,CAAC,CAAC;EAEFQ,EAAE,CAAC,mBAAmB,EAAE,MAAK;IAC3BC,MAAM,CAACN,OAAO,CAAC,CAACO,UAAU,EAAE;EAC9B,CAAC,CAAC;EAEFF,EAAE,CAAC,cAAc,EAAC,MAAI;IACpB,MAAMG,QAAQ,GAAG;MACfC,UAAU,EAAC,QAAQ;MACnBC,SAAS,EAAE,UAAU;MACrBC,KAAK,EAAC,2BAA2B;MACjCC,QAAQ,EAAC;KACV;IAEDZ,OAAO,CAACa,SAAS,CAACL,QAAQ,CAAC,CAACM,SAAS,CAACC,GAAG,IAAE;MACzCT,MAAM,CAACS,GAAG,CAACC,OAAO,CAAC,CAACC,OAAO,CAAC,wBAAwB,CAAC;IACzD,CAAC,CAAC;EACJ,CAAC,CAAC;AACF,CAAC,CADE"},"metadata":{},"sourceType":"module","externalDependencies":[]}