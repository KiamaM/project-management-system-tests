{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./navbar.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./navbar.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router, RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\nlet NavBarComponent = class NavBarComponent {\n  constructor(router, route) {\n    this.router = router;\n    this.route = route;\n    this.isTourDrawerOpen = false;\n    this.isProfileDrawerOpen = false;\n    this.logoutText = 'LOG IN';\n    this.currentroute = this.route.snapshot.routeConfig?.path;\n    this.token = localStorage.getItem('token');\n    this.admin = localStorage.getItem('admin');\n    this.isLoggedIn = localStorage.getItem('token');\n    this.isAdmin = localStorage.getItem('admin');\n    this.today = new Date();\n    if (this.currentroute == 'login') {\n      this.logoutText = 'LOGOUT';\n    }\n  }\n  navigatetoLogin() {\n    this.router.navigate(['login']);\n  }\n  navigatetoRegister() {\n    this.router.navigate(['register']);\n  }\n  logout() {\n    this.router.navigate(['login']);\n    localStorage.clear();\n  }\n  toggleTourDrawer() {\n    this.isTourDrawerOpen = !this.isTourDrawerOpen;\n    this.isProfileDrawerOpen = false; // Close the profile drawer\n  }\n  toggleProfileDrawer() {\n    this.isProfileDrawerOpen = !this.isProfileDrawerOpen;\n    this.isTourDrawerOpen = false; // Close the book drawer\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: Router\n  }, {\n    type: ActivatedRoute\n  }];\n};\nNavBarComponent = __decorate([Component({\n  selector: 'app-nav-bar',\n  standalone: true,\n  imports: [RouterLink, RouterLinkActive, RouterOutlet],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], NavBarComponent);\nexport { NavBarComponent };","map":{"version":3,"names":["Component","ActivatedRoute","Router","RouterLink","RouterLinkActive","RouterOutlet","NavBarComponent","constructor","router","route","isTourDrawerOpen","isProfileDrawerOpen","logoutText","currentroute","snapshot","routeConfig","path","token","localStorage","getItem","admin","isLoggedIn","isAdmin","today","Date","navigatetoLogin","navigate","navigatetoRegister","logout","clear","toggleTourDrawer","toggleProfileDrawer","_","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["E:\\QAQE\\Recent Projects\\Project Management System ng\\project-management-system\\src\\Components\\navbar\\navbar.component.ts"],"sourcesContent":["import { Component} from '@angular/core';\r\nimport { ActivatedRoute, Router, RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  standalone: true,\r\n  imports: [RouterLink, RouterLinkActive, RouterOutlet],\r\n  templateUrl: './navbar.component.html',\r\n  styleUrl: './navbar.component.css'\r\n})\r\nexport class NavBarComponent {\r\n  isTourDrawerOpen: boolean = false;\r\n  isProfileDrawerOpen: boolean = false;\r\n\r\n  logoutText:string = 'LOG IN'\r\n\r\n  currentroute = (this.route.snapshot.routeConfig?.path);\r\n  token = localStorage.getItem('token') as string\r\n  admin = localStorage.getItem('admin') as string\r\n\r\n  constructor(private router:Router, private route:ActivatedRoute){\r\n\r\n    if(this.currentroute == 'login'){\r\n\r\n      this.logoutText = 'LOGOUT'\r\n      \r\n    }\r\n  }\r\n\r\n  isLoggedIn = localStorage.getItem('token')\r\n  isAdmin = localStorage.getItem('admin')\r\n\r\n  today = new Date()\r\n\r\n  navigatetoLogin(){    \r\n    this.router.navigate(['login'])\r\n  }\r\n\r\n  navigatetoRegister(){\r\n    this.router.navigate(['register'])\r\n  }\r\n\r\n  logout(){\r\n    this.router.navigate(['login'])\r\n    localStorage.clear()    \r\n  }\r\n\r\n  toggleTourDrawer() {\r\n    this.isTourDrawerOpen = !this.isTourDrawerOpen;\r\n    this.isProfileDrawerOpen = false; // Close the profile drawer\r\n  }\r\n\r\n  toggleProfileDrawer(){\r\n    this.isProfileDrawerOpen = !this.isProfileDrawerOpen;\r\n    this.isTourDrawerOpen = false; // Close the book drawer\r\n  }\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n\r\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAO,eAAe;AACxC,SAASC,cAAc,EAAEC,MAAM,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,YAAY,QAAQ,iBAAiB;AAU7F,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAU1BC,YAAoBC,MAAa,EAAUC,KAAoB;IAA3C,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,KAAK,GAALA,KAAK;IAThD,KAAAC,gBAAgB,GAAY,KAAK;IACjC,KAAAC,mBAAmB,GAAY,KAAK;IAEpC,KAAAC,UAAU,GAAU,QAAQ;IAE5B,KAAAC,YAAY,GAAI,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,WAAW,EAAEC,IAAK;IACtD,KAAAC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAW;IAC/C,KAAAC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAW;IAW/C,KAAAE,UAAU,GAAGH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC1C,KAAAG,OAAO,GAAGJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAEvC,KAAAI,KAAK,GAAG,IAAIC,IAAI,EAAE;IAVhB,IAAG,IAAI,CAACX,YAAY,IAAI,OAAO,EAAC;MAE9B,IAAI,CAACD,UAAU,GAAG,QAAQ;;EAG9B;EAOAa,eAAeA,CAAA;IACb,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEAC,kBAAkBA,CAAA;IAChB,IAAI,CAACnB,MAAM,CAACkB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EACpC;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAACpB,MAAM,CAACkB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/BR,YAAY,CAACW,KAAK,EAAE;EACtB;EAEAC,gBAAgBA,CAAA;IACd,IAAI,CAACpB,gBAAgB,GAAG,CAAC,IAAI,CAACA,gBAAgB;IAC9C,IAAI,CAACC,mBAAmB,GAAG,KAAK,CAAC,CAAC;EACpC;EAEAoB,mBAAmBA,CAAA;IACjB,IAAI,CAACpB,mBAAmB,GAAG,CAAC,IAAI,CAACA,mBAAmB;IACpD,IAAI,CAACD,gBAAgB,GAAG,KAAK,CAAC,CAAC;EACjC;EAAC,QAAAsB,CAAA,G;;;;;;AA7CU1B,eAAe,GAAA2B,UAAA,EAP3BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,aAAa;EACvBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACjC,UAAU,EAAEC,gBAAgB,EAAEC,YAAY,CAAC;EACrDgC,QAAA,EAAAC,oBAAsC;;CAEvC,CAAC,C,EACWhC,eAAe,CAmD3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}