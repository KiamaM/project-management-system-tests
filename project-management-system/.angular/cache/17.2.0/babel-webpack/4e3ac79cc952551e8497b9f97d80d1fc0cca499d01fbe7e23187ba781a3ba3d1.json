{"ast":null,"code":"import { TestBed } from '@angular/core/testing';\nimport { HttpTestingController } from '@angular/common/http/testing';\ndescribe('UserService', () => {\n  let service;\n  let testingControler;\n  beforeEach(() => {\n    TestBed.configureTestingModule({});\n    service = TestBed.inject(UserService);\n    testingControler = TestBed.inject(HttpTestingController);\n  });\n  it('should be created', () => {\n    expect(service).toBeTruthy();\n  });\n  it('Registers a user', () => {\n    let mockUser = {\n      first_name: \"Daniel\",\n      last_name: \"Muriithi\",\n      email: \"muriithikiamad1@gmail.com\",\n      password: \"12345678\"\n    };\n    service.registerUser(mockUser).subscribe(res => {\n      expect(res.message).toEqual(\"Account created successfully\");\n    });\n    const mockReq = testingControler.expectOne('http://localhost:4500/users');\n    expect(mockReq.request.method).toEqual('POST');\n    expect(mockReq.request.body).toBe(mockUser);\n    mockReq.flush({\n      message: \"Account created successfully\"\n    });\n  });\n});","map":{"version":3,"names":["TestBed","HttpTestingController","describe","service","testingControler","beforeEach","configureTestingModule","inject","UserService","it","expect","toBeTruthy","mockUser","first_name","last_name","email","password","registerUser","subscribe","res","message","toEqual","mockReq","expectOne","request","method","body","toBe","flush"],"sources":["E:\\QAQE\\Recent Projects\\Project Management System ng\\project-management-system\\src\\Services\\user.service.spec.ts"],"sourcesContent":["import { TestBed } from '@angular/core/testing';\r\n\r\nimport { RegisterService,  } from './user.service';\r\n\r\nimport {HttpClientTestingModule, HttpTestingController} from '@angular/common/http/testing'\r\nimport { registerUser } from '../Interfaces/register.interface';\r\n\r\n\r\ndescribe('UserService', () => {\r\n  let service: RegisterService;\r\n\r\n  let testingControler:HttpTestingController\r\n\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({});\r\n    service = TestBed.inject(UserService);\r\n    testingControler = TestBed.inject(HttpTestingController)\r\n  });\r\n\r\n  it('should be created', () => {\r\n    expect(service).toBeTruthy();\r\n  });\r\n\r\n  it('Registers a user', ()=>{\r\n\r\n    let mockUser = {\r\n      first_name:\"Daniel\",\r\n      last_name: \"Muriithi\",\r\n      email:\"muriithikiamad1@gmail.com\",\r\n      password:\"12345678\"\r\n    }\r\n\r\n    service.registerUser(mockUser).subscribe(res=>{\r\n      expect(res.message).toEqual(\"Account created successfully\")\r\n    })\r\n\r\n    const mockReq = testingControler.expectOne('http://localhost:4500/users')\r\n\r\n    expect(mockReq.request.method).toEqual('POST')\r\n    expect(mockReq.request.body).toBe(mockUser)\r\n\r\n    mockReq.flush({\r\n      message:\"Account created successfully\"\r\n    })\r\n  })\r\n});\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,uBAAuB;AAI/C,SAAiCC,qBAAqB,QAAO,8BAA8B;AAI3FC,QAAQ,CAAC,aAAa,EAAE,MAAK;EAC3B,IAAIC,OAAwB;EAE5B,IAAIC,gBAAsC;EAG1CC,UAAU,CAAC,MAAK;IACdL,OAAO,CAACM,sBAAsB,CAAC,EAAE,CAAC;IAClCH,OAAO,GAAGH,OAAO,CAACO,MAAM,CAACC,WAAW,CAAC;IACrCJ,gBAAgB,GAAGJ,OAAO,CAACO,MAAM,CAACN,qBAAqB,CAAC;EAC1D,CAAC,CAAC;EAEFQ,EAAE,CAAC,mBAAmB,EAAE,MAAK;IAC3BC,MAAM,CAACP,OAAO,CAAC,CAACQ,UAAU,EAAE;EAC9B,CAAC,CAAC;EAEFF,EAAE,CAAC,kBAAkB,EAAE,MAAI;IAEzB,IAAIG,QAAQ,GAAG;MACbC,UAAU,EAAC,QAAQ;MACnBC,SAAS,EAAE,UAAU;MACrBC,KAAK,EAAC,2BAA2B;MACjCC,QAAQ,EAAC;KACV;IAEDb,OAAO,CAACc,YAAY,CAACL,QAAQ,CAAC,CAACM,SAAS,CAACC,GAAG,IAAE;MAC5CT,MAAM,CAACS,GAAG,CAACC,OAAO,CAAC,CAACC,OAAO,CAAC,8BAA8B,CAAC;IAC7D,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAGlB,gBAAgB,CAACmB,SAAS,CAAC,6BAA6B,CAAC;IAEzEb,MAAM,CAACY,OAAO,CAACE,OAAO,CAACC,MAAM,CAAC,CAACJ,OAAO,CAAC,MAAM,CAAC;IAC9CX,MAAM,CAACY,OAAO,CAACE,OAAO,CAACE,IAAI,CAAC,CAACC,IAAI,CAACf,QAAQ,CAAC;IAE3CU,OAAO,CAACM,KAAK,CAAC;MACZR,OAAO,EAAC;KACT,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}